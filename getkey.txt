# Paths
$pfxPath = "C:\certs\api.pfx"
$crtOut  = "C:\certs\api.crt"        # leaf cert (PEM)
$keyOut  = "C:\certs\api.key"        # private key (PKCS#8 PEM)
$chainOut= "C:\certs\fullchain.crt"  # leaf + intermediates (PEM)

# Read PFX
$pwd  = Read-Host "Enter PFX password" -AsSecureString
$cert = [System.Security.Cryptography.X509Certificates.X509Certificate2]::new(
  $pfxPath, $pwd,
  [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable
)

# ----- Write PRIVATE KEY (PKCS#8 PEM) -----
# (works for RSA or ECDSA)
$priv = $cert.GetRSAPrivateKey()
if (-not $priv) { $priv = $cert.GetECDsaPrivateKey() }
if (-not $priv) { throw "No exportable private key on this certificate." }

[byte[]]$pkcs8 = $priv.ExportPkcs8PrivateKey()
$pkcs8b64 = [Convert]::ToBase64String($pkcs8, 'InsertLineBreaks')
@(
  "-----BEGIN PRIVATE KEY-----"
  $pkcs8b64
  "-----END PRIVATE KEY-----"
) -join "`r`n" | Set-Content -Path $keyOut -NoNewline -Encoding ascii

# ----- Write leaf CERT (PEM) -----
$leafB64 = [Convert]::ToBase64String($cert.RawData, 'InsertLineBreaks')
@(
  "-----BEGIN CERTIFICATE-----"
  $leafB64
  "-----END CERTIFICATE-----"
) -join "`r`n" | Set-Content -Path $crtOut -NoNewline -Encoding ascii

# ----- Write FULL CHAIN (PEM) : leaf + intermediates -----
$chain = New-Object System.Security.Cryptography.X509Certificates.X509Chain
$chain.Build($cert) | Out-Null
$all = foreach ($elem in $chain.ChainElements) {
  $b64 = [Convert]::ToBase64String($elem.Certificate.RawData, 'InsertLineBreaks')
  "-----BEGIN CERTIFICATE-----`r`n$b64`r`n-----END CERTIFICATE-----`r`n"
}
$all -join "" | Set-Content -Path $chainOut -NoNewline -Encoding ascii

# Tighten file ACLs (Admins only)
icacls C:\certs\api.key /inheritance:r /grant:r Administrators:F